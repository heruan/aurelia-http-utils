{"version":3,"sources":["../../src/main/link-header-parser.ts"],"names":[],"mappings":";;AAAA;IAAA;IAyBA,CAAC;IAvBU,gCAAK,GAAZ,UAAa,OAAiB;QAC1B,IAAI,MAAM,GAAwB,IAAI,GAAG,EAAkB,CAAC;QAE5D,IAAI,UAAU,GAAW,yBAAyB,CAAC;QACnD,IAAI,UAAU,GAAW,sBAAsB,CAAC;QAChD,IAAI,YAAY,GAAW,SAAS,CAAC;QAErC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACtC,IAAI,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;YAC9B,IAAI,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAClC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACP,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;gBACrC,IAAI,MAAM,GAAG,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzC,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC1B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;oBAClC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;gBAChC,CAAC;YACL,CAAC;QACL,CAAC;QAED,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAEL,uBAAC;AAAD,CAzBA,AAyBC,IAAA;AAzBY,4CAAgB","file":"link-header-parser.js","sourcesContent":["export class LinkHeaderParser {\n\n    public parse(headers: string[]): Map<string, string> {\n        let result: Map<string, string> = new Map<string, string>();\n\n        let relsRegExp: RegExp = /\\brel=\"?([^\"]+)\"?\\s*;?/i;\n        let keysRegExp: RegExp = /(\\b[0-9a-z\\.-]+\\b)/gi;\n        let sourceRegExp: RegExp = /^<(.*)>/;\n\n        for (let i = 0; i < headers.length; i++) {\n            let entry = headers[i].trim();\n            let rels = relsRegExp.exec(entry);\n            if (rels) {\n                let keys = rels[1].match(keysRegExp);\n                let source = sourceRegExp.exec(entry)[1];\n                let kLength = keys.length;\n                for (let k = 0; k < kLength; k += 1) {\n                    result.set(keys[k], source);\n                }\n            }\n        }\n\n        return result;\n    }\n\n}\n"]}